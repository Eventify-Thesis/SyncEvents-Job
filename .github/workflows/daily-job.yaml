name: Daily Upload Events Job

on:
  schedule:
    # Runs at 2:00pm Vietnam time (06:50 UTC) every day
    - cron: '0 7 * * *'
  workflow_dispatch:

jobs:
  run-upload-events:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      QDRANT_URL: ${{ secrets.QDRANT_URL }}
      QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Print env vars
        run: env | grep POSTGRES

      - name: Wait for Postgres to be ready
        run: |
          for i in {1..10}; do
            pg_isready -h localhost -p 5432 && break
            echo "Waiting for Postgres..."
            sleep 3
          done

      # --- Add this step to run TypeORM migrations (adjust as needed) ---
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install event-service dependencies
        run: npm install
        working-directory: event-service  # adjust if needed

      - name: Run TypeORM migrations
        run: npm run typeorm migration:run
        working-directory: event-service  # adjust if needed
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
      # ------------------------------------------------------------------

      # Remove or comment out the SQL schema init step if using migrations
      # - name: Initialize database schema
      #   run: psql -h localhost -U $POSTGRES_USER -d $POSTGRES_DB -f db/schema.sql
      #   env:
      #     PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}

      - name: Run upload events script
        run: python run_upload_events.py